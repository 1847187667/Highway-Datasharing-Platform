<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.road.mapper.AccidentdataMapper">
    
    <resultMap type="Accidentdata" id="AccidentdataResult">
        <result property="id"    column="id"    />
        <result property="accidentTime"    column="accident_time"    />
        <result property="accidentLocation"    column="accident_location"    />
        <result property="accidentType"    column="accident_type"    />
        <result property="involvedVehicles"    column="involved_vehicles"    />
        <result property="image"    column="image"    />
        <result property="casualties"    column="casualties"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>

    <resultMap id="AccidentdataDeptResult" type="Accidentdata" extends="AccidentdataResult">
        <collection property="deptList" ofType="Dept" column="id" select="selectDeptList" />
    </resultMap>

    <resultMap type="Dept" id="DeptResult">
        <result property="deptId"    column="dept_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="leader"    column="leader"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="status"    column="status"    />
        <result property="createdBy"    column="created_by"    />
    </resultMap>

    <sql id="selectAccidentdataVo">
        select id, accident_time, accident_location, accident_type, involved_vehicles, image, casualties, updated_at, dept_id from accidentdata
    </sql>

    <select id="selectAccidentdataList" parameterType="Accidentdata" resultMap="AccidentdataResult">
        <include refid="selectAccidentdataVo"/>
        <where>  
            <if test="accidentTime != null "> and accident_time = #{accidentTime}</if>
            <if test="accidentLocation != null  and accidentLocation != ''"> and accident_location = #{accidentLocation}</if>
            <if test="accidentType != null  and accidentType != ''"> and accident_type = #{accidentType}</if>
            <if test="involvedVehicles != null  and involvedVehicles != ''"> and involved_vehicles = #{involvedVehicles}</if>
            <if test="image != null  and image != ''"> and image = #{image}</if>
            <if test="casualties != null "> and casualties = #{casualties}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectAccidentdataById" parameterType="Long" resultMap="AccidentdataDeptResult">
        select id, accident_time, accident_location, accident_type, involved_vehicles, image, casualties, updated_at, dept_id
        from accidentdata
        where id = #{id}
    </select>

    <select id="selectDeptList" resultMap="DeptResult">
        select dept_id, parent_id, dept_name, leader, phone, email, status, created_by
        from dept
        where dept_id = #{dept_id}
    </select>

    <insert id="insertAccidentdata" parameterType="Accidentdata" useGeneratedKeys="true" keyProperty="id">
        insert into accidentdata
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accidentTime != null">accident_time,</if>
            <if test="accidentLocation != null">accident_location,</if>
            <if test="accidentType != null">accident_type,</if>
            <if test="involvedVehicles != null">involved_vehicles,</if>
            <if test="image != null">image,</if>
            <if test="casualties != null">casualties,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accidentTime != null">#{accidentTime},</if>
            <if test="accidentLocation != null">#{accidentLocation},</if>
            <if test="accidentType != null">#{accidentType},</if>
            <if test="involvedVehicles != null">#{involvedVehicles},</if>
            <if test="image != null">#{image},</if>
            <if test="casualties != null">#{casualties},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateAccidentdata" parameterType="Accidentdata">
        update accidentdata
        <trim prefix="SET" suffixOverrides=",">
            <if test="accidentTime != null">accident_time = #{accidentTime},</if>
            <if test="accidentLocation != null">accident_location = #{accidentLocation},</if>
            <if test="accidentType != null">accident_type = #{accidentType},</if>
            <if test="involvedVehicles != null">involved_vehicles = #{involvedVehicles},</if>
            <if test="image != null">image = #{image},</if>
            <if test="casualties != null">casualties = #{casualties},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAccidentdataById" parameterType="Long">
        delete from accidentdata where id = #{id}
    </delete>

    <delete id="deleteAccidentdataByIds" parameterType="String">
        delete from accidentdata where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteDeptByDeptIds" parameterType="String">
        delete from dept where dept_id in 
        <foreach item="deptId" collection="array" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </delete>

    <delete id="deleteDeptByDeptId" parameterType="Long">
        delete from dept where dept_id = #{deptId}
    </delete>

    <insert id="batchDept">
        insert into dept( dept_id, parent_id, dept_name, leader, phone, email, status, created_by) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.deptId}, #{item.parentId}, #{item.deptName}, #{item.leader}, #{item.phone}, #{item.email}, #{item.status}, #{item.createdBy})
        </foreach>
    </insert>
</mapper>