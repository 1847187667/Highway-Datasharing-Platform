<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.road.mapper.EmergencyeventsMapper">
    
    <resultMap type="Emergencyevents" id="EmergencyeventsResult">
        <result property="id"    column="id"    />
        <result property="eventTime"    column="event_time"    />
        <result property="eventType"    column="event_type"    />
        <result property="eventLocation"    column="event_location"    />
        <result property="eventDescription"    column="event_description"    />
        <result property="image"    column="image"    />
        <result property="updatedAt"    column="updated_at"    />
        <result property="deptId"    column="dept_id"    />
    </resultMap>

    <resultMap id="EmergencyeventsDeptResult" type="Emergencyevents" extends="EmergencyeventsResult">
        <collection property="deptList" ofType="Dept" column="id" select="selectDeptList" />
    </resultMap>

    <resultMap type="Dept" id="DeptResult">
        <result property="deptId"    column="dept_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="leader"    column="leader"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="status"    column="status"    />
        <result property="createdBy"    column="created_by"    />
    </resultMap>

    <sql id="selectEmergencyeventsVo">
        select id, event_time, event_type, event_location, event_description, image, updated_at, dept_id from emergencyevents
    </sql>

    <select id="selectEmergencyeventsList" parameterType="Emergencyevents" resultMap="EmergencyeventsResult">
        <include refid="selectEmergencyeventsVo"/>
        <where>  
            <if test="eventTime != null "> and event_time = #{eventTime}</if>
            <if test="eventType != null  and eventType != ''"> and event_type = #{eventType}</if>
            <if test="eventLocation != null  and eventLocation != ''"> and event_location = #{eventLocation}</if>
            <if test="eventDescription != null  and eventDescription != ''"> and event_description = #{eventDescription}</if>
            <if test="image != null  and image != ''"> and image = #{image}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectEmergencyeventsById" parameterType="Long" resultMap="EmergencyeventsDeptResult">
        select id, event_time, event_type, event_location, event_description, image, updated_at, dept_id
        from emergencyevents
        where id = #{id}
    </select>

    <select id="selectDeptList" resultMap="DeptResult">
        select dept_id, parent_id, dept_name, leader, phone, email, status, created_by
        from dept
        where dept_id = #{dept_id}
    </select>

    <insert id="insertEmergencyevents" parameterType="Emergencyevents" useGeneratedKeys="true" keyProperty="id">
        insert into emergencyevents
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eventTime != null">event_time,</if>
            <if test="eventType != null">event_type,</if>
            <if test="eventLocation != null">event_location,</if>
            <if test="eventDescription != null">event_description,</if>
            <if test="image != null">image,</if>
            <if test="updatedAt != null">updated_at,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eventTime != null">#{eventTime},</if>
            <if test="eventType != null">#{eventType},</if>
            <if test="eventLocation != null">#{eventLocation},</if>
            <if test="eventDescription != null">#{eventDescription},</if>
            <if test="image != null">#{image},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateEmergencyevents" parameterType="Emergencyevents">
        update emergencyevents
        <trim prefix="SET" suffixOverrides=",">
            <if test="eventTime != null">event_time = #{eventTime},</if>
            <if test="eventType != null">event_type = #{eventType},</if>
            <if test="eventLocation != null">event_location = #{eventLocation},</if>
            <if test="eventDescription != null">event_description = #{eventDescription},</if>
            <if test="image != null">image = #{image},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmergencyeventsById" parameterType="Long">
        delete from emergencyevents where id = #{id}
    </delete>

    <delete id="deleteEmergencyeventsByIds" parameterType="String">
        delete from emergencyevents where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteDeptByDeptIds" parameterType="String">
        delete from dept where dept_id in 
        <foreach item="deptId" collection="array" open="(" separator="," close=")">
            #{deptId}
        </foreach>
    </delete>

    <delete id="deleteDeptByDeptId" parameterType="Long">
        delete from dept where dept_id = #{deptId}
    </delete>

    <insert id="batchDept">
        insert into dept( dept_id, parent_id, dept_name, leader, phone, email, status, created_by) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.deptId}, #{item.parentId}, #{item.deptName}, #{item.leader}, #{item.phone}, #{item.email}, #{item.status}, #{item.createdBy})
        </foreach>
    </insert>
</mapper>